name: Deploy to Linode VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      LINODE_HOST: ${{ secrets.LINODE_HOST }}
      LINODE_USERNAME: ${{ secrets.LINODE_USERNAME }}
      LINODE_SSH_KEY: ${{ secrets.LINODE_SSH_KEY }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Linode
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.LINODE_HOST }}
          username: ${{ env.LINODE_USERNAME }}
          key: ${{ env.LINODE_SSH_KEY }}
          source: "."
          target: ${{ env.DEPLOY_PATH }}

      - name: Build and Restart services on Linode using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.LINODE_HOST }}
          username: ${{ env.LINODE_USERNAME }}
          key: ${{ env.LINODE_SSH_KEY }}
          script: |
            cd ${{ env.DEPLOY_PATH }}/deploy
            export DB_NAME="${{ env.DB_NAME }}"
            export DB_USER="${{ env.DB_USER }}"
            export DB_PASSWORD="${{ env.DB_PASSWORD }}"
            docker-compose -f docker-compose.prod.yml run --rm certbot certonly --webroot --webroot-path /var/www/certbot/ -d beloteplay.site --non-interactive --register-unsafely-without-email

      - name: Conditionally Renew SSL Certificate
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.LINODE_HOST }}
          username: ${{ env.LINODE_USERNAME }}
          key: ${{ env.LINODE_SSH_KEY }}
          script: |
            cd ${{ env.DEPLOY_PATH }}/deploy
            # Use docker exec to check and manipulate files inside the container's volume
            file_content=$(docker exec deploy_belote-backend_1 cat /app/config/last_renewal.txt) # Assuming default prefix is "deploy"
            
            if [[ -n "$file_content" ]]; then
              last_renewal_date=$file_content
              current_date=$(date +"%Y%m%d")
              diff=$(( current_date - last_renewal_date ))
              
              # Only renew if it's been more than 60 days
              if (( diff > 60 )); then
                docker-compose -f docker-compose.prod.yml run --rm certbot renew
                docker exec deploy_belote-backend_1 bash -c "echo $(date +"%Y%m%d") > /app/config/last_renewal.txt"
              fi
            else
              docker-compose -f docker-compose.prod.yml run --rm certbot renew --non-interactive
              docker exec deploy_belote-backend_1 bash -c "echo $(date +"%Y%m%d") > /app/config/last_renewal.txt"
            fi
